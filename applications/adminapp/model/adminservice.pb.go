// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/adminservice.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
	common "theterriblechild/CloudApp/common"
	model "theterriblechild/CloudApp/common/model"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateAccountMessage struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreateUser           *CreateUserMessage `protobuf:"bytes,2,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateAccountMessage) Reset()         { *m = CreateAccountMessage{} }
func (m *CreateAccountMessage) String() string { return proto.CompactTextString(m) }
func (*CreateAccountMessage) ProtoMessage()    {}
func (*CreateAccountMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_96292a55e4fedcbc, []int{0}
}

func (m *CreateAccountMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountMessage.Unmarshal(m, b)
}
func (m *CreateAccountMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountMessage.Marshal(b, m, deterministic)
}
func (m *CreateAccountMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountMessage.Merge(m, src)
}
func (m *CreateAccountMessage) XXX_Size() int {
	return xxx_messageInfo_CreateAccountMessage.Size(m)
}
func (m *CreateAccountMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountMessage proto.InternalMessageInfo

func (m *CreateAccountMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateAccountMessage) GetCreateUser() *CreateUserMessage {
	if m != nil {
		return m.CreateUser
	}
	return nil
}

type CreateUserMessage struct {
	UserCreationToken    string   `protobuf:"bytes,1,opt,name=user_creation_token,json=userCreationToken,proto3" json:"user_creation_token,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserMessage) Reset()         { *m = CreateUserMessage{} }
func (m *CreateUserMessage) String() string { return proto.CompactTextString(m) }
func (*CreateUserMessage) ProtoMessage()    {}
func (*CreateUserMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_96292a55e4fedcbc, []int{1}
}

func (m *CreateUserMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserMessage.Unmarshal(m, b)
}
func (m *CreateUserMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserMessage.Marshal(b, m, deterministic)
}
func (m *CreateUserMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserMessage.Merge(m, src)
}
func (m *CreateUserMessage) XXX_Size() int {
	return xxx_messageInfo_CreateUserMessage.Size(m)
}
func (m *CreateUserMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserMessage proto.InternalMessageInfo

func (m *CreateUserMessage) GetUserCreationToken() string {
	if m != nil {
		return m.UserCreationToken
	}
	return ""
}

func (m *CreateUserMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CreateAgentMessage struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AgentName            string   `protobuf:"bytes,2,opt,name=agent_name,json=agentName,proto3" json:"agent_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAgentMessage) Reset()         { *m = CreateAgentMessage{} }
func (m *CreateAgentMessage) String() string { return proto.CompactTextString(m) }
func (*CreateAgentMessage) ProtoMessage()    {}
func (*CreateAgentMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_96292a55e4fedcbc, []int{2}
}

func (m *CreateAgentMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAgentMessage.Unmarshal(m, b)
}
func (m *CreateAgentMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAgentMessage.Marshal(b, m, deterministic)
}
func (m *CreateAgentMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAgentMessage.Merge(m, src)
}
func (m *CreateAgentMessage) XXX_Size() int {
	return xxx_messageInfo_CreateAgentMessage.Size(m)
}
func (m *CreateAgentMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAgentMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAgentMessage proto.InternalMessageInfo

func (m *CreateAgentMessage) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *CreateAgentMessage) GetAgentName() string {
	if m != nil {
		return m.AgentName
	}
	return ""
}

type RegisterUserRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserRequest) Reset()         { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()    {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96292a55e4fedcbc, []int{3}
}

func (m *RegisterUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserRequest.Unmarshal(m, b)
}
func (m *RegisterUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserRequest.Marshal(b, m, deterministic)
}
func (m *RegisterUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserRequest.Merge(m, src)
}
func (m *RegisterUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterUserRequest.Size(m)
}
func (m *RegisterUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserRequest proto.InternalMessageInfo

func (m *RegisterUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type RegisterUserResponse struct {
	VerificationToken    string   `protobuf:"bytes,1,opt,name=verification_token,json=verificationToken,proto3" json:"verification_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserResponse) Reset()         { *m = RegisterUserResponse{} }
func (m *RegisterUserResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterUserResponse) ProtoMessage()    {}
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96292a55e4fedcbc, []int{4}
}

func (m *RegisterUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserResponse.Unmarshal(m, b)
}
func (m *RegisterUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserResponse.Marshal(b, m, deterministic)
}
func (m *RegisterUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserResponse.Merge(m, src)
}
func (m *RegisterUserResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterUserResponse.Size(m)
}
func (m *RegisterUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserResponse proto.InternalMessageInfo

func (m *RegisterUserResponse) GetVerificationToken() string {
	if m != nil {
		return m.VerificationToken
	}
	return ""
}

type ConfirmCodeRequest struct {
	VerificationToken    string   `protobuf:"bytes,1,opt,name=verification_token,json=verificationToken,proto3" json:"verification_token,omitempty"`
	VerificationCode     string   `protobuf:"bytes,2,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmCodeRequest) Reset()         { *m = ConfirmCodeRequest{} }
func (m *ConfirmCodeRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmCodeRequest) ProtoMessage()    {}
func (*ConfirmCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96292a55e4fedcbc, []int{5}
}

func (m *ConfirmCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmCodeRequest.Unmarshal(m, b)
}
func (m *ConfirmCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmCodeRequest.Marshal(b, m, deterministic)
}
func (m *ConfirmCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmCodeRequest.Merge(m, src)
}
func (m *ConfirmCodeRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmCodeRequest.Size(m)
}
func (m *ConfirmCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmCodeRequest proto.InternalMessageInfo

func (m *ConfirmCodeRequest) GetVerificationToken() string {
	if m != nil {
		return m.VerificationToken
	}
	return ""
}

func (m *ConfirmCodeRequest) GetVerificationCode() string {
	if m != nil {
		return m.VerificationCode
	}
	return ""
}

type ConfirmCodeResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	UserCreationToken    string   `protobuf:"bytes,2,opt,name=user_creation_token,json=userCreationToken,proto3" json:"user_creation_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmCodeResponse) Reset()         { *m = ConfirmCodeResponse{} }
func (m *ConfirmCodeResponse) String() string { return proto.CompactTextString(m) }
func (*ConfirmCodeResponse) ProtoMessage()    {}
func (*ConfirmCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96292a55e4fedcbc, []int{6}
}

func (m *ConfirmCodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmCodeResponse.Unmarshal(m, b)
}
func (m *ConfirmCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmCodeResponse.Marshal(b, m, deterministic)
}
func (m *ConfirmCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmCodeResponse.Merge(m, src)
}
func (m *ConfirmCodeResponse) XXX_Size() int {
	return xxx_messageInfo_ConfirmCodeResponse.Size(m)
}
func (m *ConfirmCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmCodeResponse proto.InternalMessageInfo

func (m *ConfirmCodeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ConfirmCodeResponse) GetUserCreationToken() string {
	if m != nil {
		return m.UserCreationToken
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateAccountMessage)(nil), "adminservice.CreateAccountMessage")
	proto.RegisterType((*CreateUserMessage)(nil), "adminservice.CreateUserMessage")
	proto.RegisterType((*CreateAgentMessage)(nil), "adminservice.CreateAgentMessage")
	proto.RegisterType((*RegisterUserRequest)(nil), "adminservice.RegisterUserRequest")
	proto.RegisterType((*RegisterUserResponse)(nil), "adminservice.RegisterUserResponse")
	proto.RegisterType((*ConfirmCodeRequest)(nil), "adminservice.ConfirmCodeRequest")
	proto.RegisterType((*ConfirmCodeResponse)(nil), "adminservice.ConfirmCodeResponse")
}

func init() { proto.RegisterFile("proto/adminservice.proto", fileDescriptor_96292a55e4fedcbc) }

var fileDescriptor_96292a55e4fedcbc = []byte{
	// 650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x51, 0x6b, 0xd4, 0x40,
	0x10, 0x26, 0x87, 0xda, 0x76, 0xae, 0x6a, 0x6f, 0x7b, 0xb4, 0x67, 0x68, 0xb5, 0x5d, 0x44, 0x4a,
	0x8b, 0x17, 0x7a, 0x22, 0x42, 0x9f, 0xac, 0x47, 0x29, 0x82, 0xfa, 0x10, 0xf5, 0x45, 0x84, 0x90,
	0x26, 0xd3, 0xeb, 0x62, 0x92, 0x5d, 0x77, 0xf7, 0x5a, 0x8f, 0xd2, 0x17, 0xc1, 0x17, 0x5f, 0xfd,
	0x35, 0xfe, 0x0e, 0xff, 0x82, 0x3f, 0x44, 0xb2, 0xd9, 0xf4, 0x12, 0x2f, 0xad, 0xf8, 0x72, 0x5c,
	0x66, 0x26, 0xf3, 0x7d, 0x33, 0xf3, 0x7d, 0x81, 0x9e, 0x90, 0x5c, 0x73, 0x2f, 0x8c, 0x53, 0x96,
	0x29, 0x94, 0xa7, 0x2c, 0xc2, 0xbe, 0x09, 0x91, 0xc5, 0x6a, 0xcc, 0x5d, 0x1b, 0x71, 0x3e, 0x4a,
	0xd0, 0x0b, 0x05, 0xf3, 0xc2, 0x2c, 0xe3, 0x3a, 0xd4, 0x8c, 0x67, 0xaa, 0xa8, 0x75, 0x97, 0x22,
	0x9e, 0xa6, 0x3c, 0xd3, 0x13, 0x61, 0xdf, 0x76, 0x3b, 0x29, 0x8f, 0x31, 0xf1, 0xcc, 0x6f, 0x11,
	0xa2, 0x09, 0x74, 0x87, 0x12, 0x43, 0x8d, 0xfb, 0x51, 0xc4, 0xc7, 0x99, 0x7e, 0x8d, 0x4a, 0x85,
	0x23, 0x24, 0x04, 0x6e, 0x64, 0x61, 0x8a, 0x3d, 0x67, 0xc3, 0xd9, 0x5a, 0xf0, 0xcd, 0x7f, 0xf2,
	0x1c, 0xda, 0x91, 0xa9, 0x0d, 0xc6, 0x0a, 0x65, 0xaf, 0xb5, 0xe1, 0x6c, 0xb5, 0x07, 0x0f, 0xfa,
	0x35, 0x9a, 0x45, 0xb3, 0xf7, 0x0a, 0xa5, 0xed, 0xe4, 0x43, 0x74, 0x19, 0xa2, 0x01, 0x74, 0x66,
	0x0a, 0x48, 0x1f, 0x96, 0xf3, 0x7e, 0x81, 0xa9, 0x63, 0x3c, 0x0b, 0x34, 0xff, 0x84, 0x99, 0x45,
	0xee, 0xe4, 0xa9, 0xa1, 0xcd, 0xbc, 0xcb, 0x13, 0xc4, 0x85, 0x79, 0x11, 0x2a, 0x75, 0xc6, 0x65,
	0x6c, 0x38, 0x2c, 0xf8, 0x97, 0xcf, 0xd4, 0x07, 0x62, 0xc7, 0x19, 0xe1, 0x74, 0x98, 0x75, 0x80,
	0xb0, 0x18, 0x2f, 0x60, 0xb1, 0x6d, 0xbc, 0x60, 0x23, 0x2f, 0x63, 0x93, 0xce, 0xcb, 0x03, 0x33,
	0x71, 0xcb, 0xa6, 0xf3, 0xc8, 0x9b, 0x30, 0x45, 0xba, 0x03, 0xcb, 0x3e, 0x8e, 0x98, 0xd2, 0x28,
	0x73, 0xda, 0x3e, 0x7e, 0x1e, 0xa3, 0xd2, 0xa4, 0x0b, 0x37, 0x31, 0x0d, 0x59, 0x62, 0xfb, 0x15,
	0x0f, 0xf4, 0x00, 0xba, 0xf5, 0x62, 0x25, 0x78, 0xa6, 0x90, 0x3c, 0x06, 0x72, 0x8a, 0x92, 0x1d,
	0xb3, 0xa8, 0x61, 0xc6, 0x6a, 0xc6, 0xcc, 0x48, 0x05, 0x90, 0x21, 0xcf, 0x8e, 0x99, 0x4c, 0x87,
	0x3c, 0xc6, 0x12, 0xf2, 0xff, 0x9a, 0x90, 0x1d, 0xa8, 0x05, 0x83, 0x88, 0xc7, 0xe5, 0x78, 0x4b,
	0xd5, 0x44, 0x0e, 0x41, 0x03, 0x58, 0xae, 0x21, 0x5a, 0xde, 0x3d, 0x98, 0x53, 0xe3, 0x28, 0x42,
	0xa5, 0x0c, 0xce, 0xbc, 0x5f, 0x3e, 0x5e, 0x75, 0xb6, 0xd6, 0x15, 0x67, 0x1b, 0x9c, 0xc1, 0x1d,
	0xab, 0xb1, 0xb7, 0x85, 0x56, 0x08, 0xc2, 0xed, 0x9a, 0xf6, 0x08, 0x6d, 0xd2, 0x52, 0x5d, 0x98,
	0x6e, 0xa7, 0x5f, 0x91, 0xf5, 0x41, 0x2a, 0xf4, 0x84, 0xae, 0x7f, 0xfd, 0xf5, 0xfb, 0x47, 0x6b,
	0x95, 0x92, 0xc2, 0x31, 0xde, 0xe9, 0xae, 0x67, 0x8f, 0xab, 0xf6, 0x9c, 0xed, 0xc1, 0x4f, 0x07,
	0xda, 0xf9, 0x2d, 0x4a, 0xd8, 0x8f, 0x00, 0x53, 0x11, 0x92, 0x7f, 0xe9, 0xb7, 0x09, 0xd0, 0x35,
	0x80, 0x5d, 0x7a, 0x77, 0x0a, 0x98, 0xcf, 0x9b, 0xa3, 0x91, 0x57, 0x30, 0x77, 0x88, 0xda, 0xb4,
	0x5e, 0xa9, 0xbe, 0x79, 0x88, 0x97, 0x23, 0xb4, 0xfb, 0x85, 0x03, 0x8d, 0x25, 0xd6, 0x4c, 0xaf,
	0x15, 0xd2, 0xfd, 0xab, 0x97, 0x77, 0xce, 0xe2, 0x8b, 0xc1, 0x37, 0x07, 0x16, 0x8d, 0x94, 0x4b,
	0xf2, 0x63, 0x68, 0x57, 0x04, 0x4e, 0x36, 0x1a, 0x37, 0x56, 0xd1, 0x7e, 0x13, 0xfd, 0x5d, 0x03,
	0xb9, 0x43, 0x1f, 0xcd, 0xee, 0xcb, 0x3b, 0x9f, 0x1a, 0xe5, 0xc2, 0x33, 0x1e, 0x30, 0x3b, 0xfc,
	0xde, 0x2a, 0x4d, 0x20, 0xcd, 0x49, 0x4b, 0x3a, 0x13, 0x58, 0xac, 0xca, 0x9d, 0x6c, 0xd6, 0xf9,
	0x34, 0xf8, 0xc6, 0xa5, 0xd7, 0x95, 0x14, 0xaa, 0xa3, 0xd4, 0x30, 0x5c, 0xa3, 0xab, 0x53, 0x86,
	0xd2, 0xd6, 0x99, 0xed, 0xe4, 0x8b, 0xfe, 0x02, 0xed, 0x8a, 0x60, 0x67, 0x36, 0x31, 0xe3, 0x1e,
	0x77, 0xf3, 0x9a, 0x0a, 0x8b, 0xfb, 0xd0, 0xe0, 0xde, 0xa7, 0xf7, 0x1a, 0x70, 0x8d, 0x63, 0x26,
	0x7b, 0xce, 0xf6, 0x8b, 0x67, 0x1f, 0x9e, 0xea, 0x13, 0xd4, 0x28, 0x25, 0x3b, 0x4a, 0x30, 0x3a,
	0x61, 0x49, 0xec, 0x0d, 0x13, 0x3e, 0x8e, 0xf7, 0x85, 0xf0, 0x42, 0x21, 0x12, 0xeb, 0x2b, 0x55,
	0x74, 0x09, 0x85, 0x28, 0x3e, 0xb9, 0x47, 0xb7, 0xcc, 0x37, 0xf7, 0xc9, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x5a, 0x16, 0x32, 0x45, 0xe0, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	CreateAccount(ctx context.Context, in *CreateAccountMessage, opts ...grpc.CallOption) (*common.Empty, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) CreateAccount(ctx context.Context, in *CreateAccountMessage, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/adminservice.AccountService/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	CreateAccount(context.Context, *CreateAccountMessage) (*common.Empty, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adminservice.AccountService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateAccount(ctx, req.(*CreateAccountMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adminservice.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _AccountService_CreateAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/adminservice.proto",
}

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	CreateUser(ctx context.Context, in *CreateUserMessage, opts ...grpc.CallOption) (*common.Empty, error)
	GetUser(ctx context.Context, in *common.GetMessage, opts ...grpc.CallOption) (*model.User, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *CreateUserMessage, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/adminservice.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUser(ctx context.Context, in *common.GetMessage, opts ...grpc.CallOption) (*model.User, error) {
	out := new(model.User)
	err := c.cc.Invoke(ctx, "/adminservice.UserService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	CreateUser(context.Context, *CreateUserMessage) (*common.Empty, error)
	GetUser(context.Context, *common.GetMessage) (*model.User, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adminservice.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*CreateUserMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.GetMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adminservice.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*common.GetMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adminservice.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/adminservice.proto",
}

// AgentServiceClient is the client API for AgentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentServiceClient interface {
	CreateAgent(ctx context.Context, in *CreateAgentMessage, opts ...grpc.CallOption) (*common.Empty, error)
}

type agentServiceClient struct {
	cc *grpc.ClientConn
}

func NewAgentServiceClient(cc *grpc.ClientConn) AgentServiceClient {
	return &agentServiceClient{cc}
}

func (c *agentServiceClient) CreateAgent(ctx context.Context, in *CreateAgentMessage, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/adminservice.AgentService/CreateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentServiceServer is the server API for AgentService service.
type AgentServiceServer interface {
	CreateAgent(context.Context, *CreateAgentMessage) (*common.Empty, error)
}

func RegisterAgentServiceServer(s *grpc.Server, srv AgentServiceServer) {
	s.RegisterService(&_AgentService_serviceDesc, srv)
}

func _AgentService_CreateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAgentMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).CreateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adminservice.AgentService/CreateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).CreateAgent(ctx, req.(*CreateAgentMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adminservice.AgentService",
	HandlerType: (*AgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAgent",
			Handler:    _AgentService_CreateAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/adminservice.proto",
}

// RegistrationServiceClient is the client API for RegistrationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistrationServiceClient interface {
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
	ConfirmCode(ctx context.Context, in *ConfirmCodeRequest, opts ...grpc.CallOption) (*ConfirmCodeResponse, error)
}

type registrationServiceClient struct {
	cc *grpc.ClientConn
}

func NewRegistrationServiceClient(cc *grpc.ClientConn) RegistrationServiceClient {
	return &registrationServiceClient{cc}
}

func (c *registrationServiceClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/adminservice.RegistrationService/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registrationServiceClient) ConfirmCode(ctx context.Context, in *ConfirmCodeRequest, opts ...grpc.CallOption) (*ConfirmCodeResponse, error) {
	out := new(ConfirmCodeResponse)
	err := c.cc.Invoke(ctx, "/adminservice.RegistrationService/ConfirmCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistrationServiceServer is the server API for RegistrationService service.
type RegistrationServiceServer interface {
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
	ConfirmCode(context.Context, *ConfirmCodeRequest) (*ConfirmCodeResponse, error)
}

func RegisterRegistrationServiceServer(s *grpc.Server, srv RegistrationServiceServer) {
	s.RegisterService(&_RegistrationService_serviceDesc, srv)
}

func _RegistrationService_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServiceServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adminservice.RegistrationService/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServiceServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistrationService_ConfirmCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServiceServer).ConfirmCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adminservice.RegistrationService/ConfirmCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServiceServer).ConfirmCode(ctx, req.(*ConfirmCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RegistrationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adminservice.RegistrationService",
	HandlerType: (*RegistrationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _RegistrationService_RegisterUser_Handler,
		},
		{
			MethodName: "ConfirmCode",
			Handler:    _RegistrationService_ConfirmCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/adminservice.proto",
}
