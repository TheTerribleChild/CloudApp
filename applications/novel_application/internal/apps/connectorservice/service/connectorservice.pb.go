// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connectorservice.proto

package service // import "theterriblechild/CloudApp/cloud_appplication_portal/cloud_applications/novel_application/internal/app/connectorservice/service"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import model "theterriblechild/CloudApp/cloud_appplication_portal/cloud_applications/novel_application/internal/model"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NovelDownloadRequest struct {
	SourceId             string   `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	NovelId              string   `protobuf:"bytes,2,opt,name=novel_id,json=novelId,proto3" json:"novel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NovelDownloadRequest) Reset()         { *m = NovelDownloadRequest{} }
func (m *NovelDownloadRequest) String() string { return proto.CompactTextString(m) }
func (*NovelDownloadRequest) ProtoMessage()    {}
func (*NovelDownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_connectorservice_7125aecdbc7f5231, []int{0}
}
func (m *NovelDownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NovelDownloadRequest.Unmarshal(m, b)
}
func (m *NovelDownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NovelDownloadRequest.Marshal(b, m, deterministic)
}
func (dst *NovelDownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NovelDownloadRequest.Merge(dst, src)
}
func (m *NovelDownloadRequest) XXX_Size() int {
	return xxx_messageInfo_NovelDownloadRequest.Size(m)
}
func (m *NovelDownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NovelDownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NovelDownloadRequest proto.InternalMessageInfo

func (m *NovelDownloadRequest) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

func (m *NovelDownloadRequest) GetNovelId() string {
	if m != nil {
		return m.NovelId
	}
	return ""
}

type NovelDownloadReply struct {
	NovelData            *model.NovelSourceData `protobuf:"bytes,1,opt,name=novel_data,json=novelData,proto3" json:"novel_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *NovelDownloadReply) Reset()         { *m = NovelDownloadReply{} }
func (m *NovelDownloadReply) String() string { return proto.CompactTextString(m) }
func (*NovelDownloadReply) ProtoMessage()    {}
func (*NovelDownloadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_connectorservice_7125aecdbc7f5231, []int{1}
}
func (m *NovelDownloadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NovelDownloadReply.Unmarshal(m, b)
}
func (m *NovelDownloadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NovelDownloadReply.Marshal(b, m, deterministic)
}
func (dst *NovelDownloadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NovelDownloadReply.Merge(dst, src)
}
func (m *NovelDownloadReply) XXX_Size() int {
	return xxx_messageInfo_NovelDownloadReply.Size(m)
}
func (m *NovelDownloadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NovelDownloadReply.DiscardUnknown(m)
}

var xxx_messageInfo_NovelDownloadReply proto.InternalMessageInfo

func (m *NovelDownloadReply) GetNovelData() *model.NovelSourceData {
	if m != nil {
		return m.NovelData
	}
	return nil
}

type ChapterDownloadRequest struct {
	ChapterMetadata      *model.ChapterSourceMetadata `protobuf:"bytes,1,opt,name=chapter_metadata,json=chapterMetadata,proto3" json:"chapter_metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ChapterDownloadRequest) Reset()         { *m = ChapterDownloadRequest{} }
func (m *ChapterDownloadRequest) String() string { return proto.CompactTextString(m) }
func (*ChapterDownloadRequest) ProtoMessage()    {}
func (*ChapterDownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_connectorservice_7125aecdbc7f5231, []int{2}
}
func (m *ChapterDownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChapterDownloadRequest.Unmarshal(m, b)
}
func (m *ChapterDownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChapterDownloadRequest.Marshal(b, m, deterministic)
}
func (dst *ChapterDownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterDownloadRequest.Merge(dst, src)
}
func (m *ChapterDownloadRequest) XXX_Size() int {
	return xxx_messageInfo_ChapterDownloadRequest.Size(m)
}
func (m *ChapterDownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterDownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterDownloadRequest proto.InternalMessageInfo

func (m *ChapterDownloadRequest) GetChapterMetadata() *model.ChapterSourceMetadata {
	if m != nil {
		return m.ChapterMetadata
	}
	return nil
}

type ChapterDownloadReply struct {
	ChapterData          *model.ChapterSourceData `protobuf:"bytes,1,opt,name=chapter_data,json=chapterData,proto3" json:"chapter_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ChapterDownloadReply) Reset()         { *m = ChapterDownloadReply{} }
func (m *ChapterDownloadReply) String() string { return proto.CompactTextString(m) }
func (*ChapterDownloadReply) ProtoMessage()    {}
func (*ChapterDownloadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_connectorservice_7125aecdbc7f5231, []int{3}
}
func (m *ChapterDownloadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChapterDownloadReply.Unmarshal(m, b)
}
func (m *ChapterDownloadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChapterDownloadReply.Marshal(b, m, deterministic)
}
func (dst *ChapterDownloadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChapterDownloadReply.Merge(dst, src)
}
func (m *ChapterDownloadReply) XXX_Size() int {
	return xxx_messageInfo_ChapterDownloadReply.Size(m)
}
func (m *ChapterDownloadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ChapterDownloadReply.DiscardUnknown(m)
}

var xxx_messageInfo_ChapterDownloadReply proto.InternalMessageInfo

func (m *ChapterDownloadReply) GetChapterData() *model.ChapterSourceData {
	if m != nil {
		return m.ChapterData
	}
	return nil
}

func init() {
	proto.RegisterType((*NovelDownloadRequest)(nil), "connectorservice.NovelDownloadRequest")
	proto.RegisterType((*NovelDownloadReply)(nil), "connectorservice.NovelDownloadReply")
	proto.RegisterType((*ChapterDownloadRequest)(nil), "connectorservice.ChapterDownloadRequest")
	proto.RegisterType((*ChapterDownloadReply)(nil), "connectorservice.ChapterDownloadReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConnectorClient is the client API for Connector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectorClient interface {
	GetNovelData(ctx context.Context, in *NovelDownloadRequest, opts ...grpc.CallOption) (*NovelDownloadReply, error)
	GetChapterData(ctx context.Context, in *ChapterDownloadRequest, opts ...grpc.CallOption) (*ChapterDownloadReply, error)
}

type connectorClient struct {
	cc *grpc.ClientConn
}

func NewConnectorClient(cc *grpc.ClientConn) ConnectorClient {
	return &connectorClient{cc}
}

func (c *connectorClient) GetNovelData(ctx context.Context, in *NovelDownloadRequest, opts ...grpc.CallOption) (*NovelDownloadReply, error) {
	out := new(NovelDownloadReply)
	err := c.cc.Invoke(ctx, "/connectorservice.Connector/GetNovelData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectorClient) GetChapterData(ctx context.Context, in *ChapterDownloadRequest, opts ...grpc.CallOption) (*ChapterDownloadReply, error) {
	out := new(ChapterDownloadReply)
	err := c.cc.Invoke(ctx, "/connectorservice.Connector/GetChapterData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnectorServer is the server API for Connector service.
type ConnectorServer interface {
	GetNovelData(context.Context, *NovelDownloadRequest) (*NovelDownloadReply, error)
	GetChapterData(context.Context, *ChapterDownloadRequest) (*ChapterDownloadReply, error)
}

func RegisterConnectorServer(s *grpc.Server, srv ConnectorServer) {
	s.RegisterService(&_Connector_serviceDesc, srv)
}

func _Connector_GetNovelData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NovelDownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).GetNovelData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connectorservice.Connector/GetNovelData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).GetNovelData(ctx, req.(*NovelDownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connector_GetChapterData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChapterDownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).GetChapterData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connectorservice.Connector/GetChapterData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).GetChapterData(ctx, req.(*ChapterDownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Connector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connectorservice.Connector",
	HandlerType: (*ConnectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNovelData",
			Handler:    _Connector_GetNovelData_Handler,
		},
		{
			MethodName: "GetChapterData",
			Handler:    _Connector_GetChapterData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "connectorservice.proto",
}

func init() {
	proto.RegisterFile("connectorservice.proto", fileDescriptor_connectorservice_7125aecdbc7f5231)
}

var fileDescriptor_connectorservice_7125aecdbc7f5231 = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcf, 0x6b, 0xea, 0x30,
	0x1c, 0x7f, 0x7d, 0x87, 0xf7, 0x6c, 0x94, 0x4d, 0x82, 0x88, 0x73, 0x3b, 0x8c, 0x32, 0xc4, 0x53,
	0x0b, 0x8e, 0x9d, 0x76, 0x5b, 0x05, 0x91, 0x31, 0x0f, 0xd5, 0xd3, 0x0e, 0x2b, 0x31, 0xf9, 0xb2,
	0x06, 0x62, 0x93, 0xa5, 0xa9, 0xc3, 0xe3, 0x60, 0xff, 0xe0, 0xfe, 0xa3, 0xd1, 0xb4, 0x45, 0xa9,
	0xc2, 0x76, 0x6a, 0xf3, 0xfd, 0xfc, 0xcc, 0x0f, 0xd4, 0xa7, 0x32, 0x4d, 0x81, 0x1a, 0xa9, 0x33,
	0xd0, 0x5b, 0x4e, 0xc1, 0x57, 0x5a, 0x1a, 0x89, 0xbb, 0xcd, 0xf9, 0xb0, 0xbd, 0x91, 0x0c, 0x44,
	0x09, 0x7b, 0x0b, 0xd4, 0x5b, 0xc8, 0x2d, 0x88, 0xa9, 0x7c, 0x4f, 0x85, 0x24, 0x2c, 0x82, 0xb7,
	0x1c, 0x32, 0x83, 0x2f, 0x91, 0x9b, 0xc9, 0x5c, 0x53, 0x88, 0x39, 0x1b, 0x38, 0xd7, 0xce, 0xd8,
	0x8d, 0x5a, 0xe5, 0x60, 0xce, 0xf0, 0x05, 0x6a, 0xa5, 0x85, 0xa8, 0xc0, 0xfe, 0x5a, 0xec, 0xbf,
	0x5d, 0xcf, 0x99, 0xf7, 0x88, 0x70, 0xc3, 0x4f, 0x89, 0x1d, 0xbe, 0x43, 0xa8, 0x14, 0x30, 0x62,
	0x88, 0xb5, 0x6b, 0x4f, 0xfa, 0x7e, 0xd9, 0xc3, 0xd2, 0x97, 0xd6, 0x7a, 0x4a, 0x0c, 0x89, 0x5c,
	0xcb, 0x2c, 0x7e, 0x3d, 0x82, 0xfa, 0x61, 0x42, 0x94, 0x01, 0xdd, 0xac, 0x37, 0x43, 0x5d, 0x5a,
	0x22, 0xf1, 0x06, 0x0c, 0x39, 0xb0, 0xbd, 0xaa, 0x6c, 0x2b, 0x61, 0x69, 0xfc, 0x54, 0x71, 0xa2,
	0xf3, 0x4a, 0x55, 0x0f, 0xbc, 0x25, 0xea, 0x1d, 0x45, 0x14, 0x8d, 0xef, 0x51, 0xa7, 0x0e, 0x38,
	0x30, 0x1f, 0x9c, 0x32, 0xb7, 0xad, 0xdb, 0x15, 0xbb, 0x58, 0x4c, 0xbe, 0x1c, 0xe4, 0x86, 0xf5,
	0xb1, 0xe3, 0x17, 0xd4, 0x99, 0x81, 0x59, 0xd4, 0xbb, 0xc2, 0x23, 0xff, 0xe8, 0xaa, 0x4e, 0x5d,
	0xc1, 0xf0, 0xe6, 0x47, 0x9e, 0x12, 0x3b, 0xef, 0x0f, 0x66, 0xe8, 0x6c, 0x06, 0x26, 0xdc, 0xe7,
	0xe3, 0xf1, 0xb1, 0xf2, 0xf4, 0x39, 0x0e, 0x47, 0xbf, 0x60, 0xda, 0x94, 0x87, 0x4f, 0xe7, 0xf9,
	0xc3, 0x79, 0xe5, 0x26, 0xc9, 0xd7, 0x3e, 0x95, 0x9b, 0x60, 0x95, 0xc0, 0x0a, 0xb4, 0xe6, 0x6b,
	0x01, 0x61, 0xc2, 0x05, 0x0b, 0xa8, 0x90, 0x39, 0x8b, 0x89, 0x52, 0x4a, 0x70, 0x4a, 0x0c, 0x97,
	0x69, 0xac, 0xa4, 0x36, 0x44, 0xec, 0x91, 0x1a, 0xc8, 0x82, 0xf2, 0x35, 0x1c, 0x8c, 0x02, 0x9e,
	0x1a, 0xd0, 0x29, 0x11, 0x01, 0x51, 0x2a, 0x0b, 0x9a, 0xad, 0x82, 0xea, 0xbb, 0xfe, 0x67, 0x9f,
	0xed, 0xed, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0xda, 0x24, 0xe1, 0xef, 0x02, 0x00, 0x00,
}
